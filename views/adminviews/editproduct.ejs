<%- include('./sidebar') %>
<style>
  body {
    font-family: Arial, sans-serif;
    margin: 20px;
  }

  form {
    max-width: 600px;
    margin: auto;
  }

  label {
    display: block;
    margin-top: 10px;
  }

  input,
  select {
    width: 100%;
    padding: 8px;
    margin-top: 5px;
    margin-bottom: 10px;
    box-sizing: border-box;
  }

  button {
    background-color: #4CAF50;
    color: white;
    padding: 10px 15px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }

  .preview-container {
    display: inline-block;
    margin: 5px;
    position: relative;
  }

  .delete-button {
    position: absolute;
    top: 0;
    right: 0;
    background-color: red;
    color: white;
    border: none;
    padding: 2px 6px;
    cursor: pointer;
  }

  .error-message {
    color: red;
    font-size: 14px;
    margin-top: 5px;
  }

  .warning-message {
    color: orange;
    font-size: 14px;
    margin-top: 5px;
    font-weight: bold;
  }

  .image-section {
    border: 2px dashed #ccc;
    padding: 15px;
    margin: 10px 0;
    border-radius: 5px;
  }
</style>

<body>
  <div class="content">
    <form id="yourFormId" action="/updateProduct/<%= product._id %>" method="post" class="form-horizontal" enctype="multipart/form-data">
      <h2 style="color: blue;">Edit Product(<%= product.name %>)</h2>

      <div class="form-group">
        <label class="col-md-4 control-label" for="product_name">NAME</label>
        <div class="col-md-8">
          <input id="product_name" name="name" placeholder="" class="form-control input-md" required="true" type="text"
            value="<%= product.name %>">
        </div>
      </div>

      <div class="form-group">
        <label class="col-md-4 control-label" for="product_name_fr">DESCRIPTION</label>
        <div class="col-md-8">
          <input id="product_name_fr" name="description" placeholder="" class="form-control input-md" required=""
            type="text" value="<%= product.description %>">
        </div>
      </div>

      <div class="form-group">
        <label class="col-md-4 control-label" for="product_categorie">CATEGORY</label>
        <div class="col-md-4">
          <select id="product_categorie" name="category" class="form-control">
            <% category.forEach(cat => { %>
              <option value="<%= cat._id %>" <% if (product.category.equals(cat._id)) { %>selected<% } %>>
                <%= cat.name %>
              </option>
            <% }); %>
          </select>
        </div>
      </div>

      <div class="form-group">
        <label class="col-md-4 control-label" for="price">PRICE</label>
        <div class="col-md-4">
          <input id="price" name="price" placeholder="" class="form-control input-md" required="true" type="text"
            value="<%= product.price %>">
        </div>
        <label class="col-md-4 control-label" for="stock">STOCK</label>
        <div class="col-md-4">
          <input id="stock" name="stock" placeholder="" class="form-control input-md" required="true" type="text"
            value="<%= product.stock %>">
        </div>
      </div>

      <div class="form-group">
        <label class="col-md-4 control-label" for="size">SIZE</label>
        <div class="col-md-4">
          <input id="size" name="size" placeholder="" class="form-control input-md" required="" type="text"
            value="<%= product.size %>">
        </div>
        <label class="col-md-4 control-label" for="color">COLOR</label>
        <div class="col-md-4">
          <input id="color" name="color" placeholder="" class="form-control input-md" required="" type="text"
            value="<%= product.color %>">
        </div>
      </div>

      <div class="form-group">
        <div class="image-section">
          <label class="col-md-4 control-label" for="filebutton">PRODUCT IMAGES</label>
          <div class="col-md-4">
            <input id="filebutton" name="images" class="input-file" type="file" multiple accept="image/*" onchange="previewImages(this)">
          </div>
          
          <div id="imageWarning" class="warning-message" style="display: none;">
            ⚠️ Products must have at least one image. Please upload new images or keep existing ones.
          </div>
          
          <h4>Current Images:</h4>
          <div id="imagePreview">
            <% existingImages.forEach(image => { %>
              <div class="preview-container" data-image="<%= image %>">
                <img src="<%= image %>" style="width: 100px; height: 100px;">
                <button type="button" class="delete-button" onclick="removeImage('<%= image %>')">X</button>
              </div>
            <% }); %>
          </div>
          
          <div id="newImagesPreview">
            <!-- New uploaded images will appear here -->
          </div>
        </div>
      </div>

      <input type="hidden" name="old_images" value="<%= product.images.join(',') %>">
      <input type="hidden" name="deletedImages" id="deletedImages" value="">

      <div class="form-group">
        <label class="col-md-4 control-label" for="singlebutton"></label>
        <div class="col-md-4">
          <button type="submit" id="singlebutton" name="singlebutton" class="btn btn-primary">Update</button>
        </div>
      </div>
    </form>
  </div>

  <script>
    let deletedImages = [];
    let newFiles = [];

    function removeImage(imageName) {
      deletedImages.push(imageName);
      document.getElementById('deletedImages').value = deletedImages.join(',');
      
      // Remove from DOM
      const previewContainer = document.getElementById('imagePreview');
      const containers = previewContainer.getElementsByClassName('preview-container');
      for (let container of containers) {
        if (container.getAttribute('data-image') === imageName) {
          previewContainer.removeChild(container);
          break;
        }
      }
      
      checkImageCount();
    }

    function removeNewImage(fileName, previewDiv) {
      // Remove from newFiles array
      newFiles = newFiles.filter(file => file.name !== fileName);
      
      // Remove from DOM
      previewDiv.remove();
      
      // Update file input
      updateFileInput();
      
      checkImageCount();
    }

    function updateFileInput() {
      const fileInput = document.getElementById('filebutton');
      const dt = new DataTransfer();
      
      newFiles.forEach(file => {
        dt.items.add(file);
      });
      
      fileInput.files = dt.files;
    }

    function previewImages(input) {
      const newImagesPreview = document.getElementById('newImagesPreview');
      const files = Array.from(input.files);
      
      // Clear previous new images
      newImagesPreview.innerHTML = '';
      newFiles = [];

      files.forEach((file, index) => {
        newFiles.push(file);
        
        const reader = new FileReader();
        reader.onload = function (e) {
          const previewDiv = document.createElement('div');
          previewDiv.className = 'preview-container';

          const img = document.createElement('img');
          img.src = e.target.result;
          img.style.width = '100px';
          img.style.height = '100px';

          const deleteButton = document.createElement('button');
          deleteButton.type = 'button';
          deleteButton.className = 'delete-button';
          deleteButton.innerHTML = 'X';
          deleteButton.onclick = function () {
            removeNewImage(file.name, previewDiv);
          };

          previewDiv.appendChild(img);
          previewDiv.appendChild(deleteButton);
          newImagesPreview.appendChild(previewDiv);
        };

        reader.readAsDataURL(file);
      });
      
      checkImageCount();
    }

    function checkImageCount() {
      const existingImagesCount = document.getElementById('imagePreview').children.length;
      const newImagesCount = newFiles.length;
      const totalImages = existingImagesCount + newImagesCount;
      
      const warningDiv = document.getElementById('imageWarning');
      const submitButton = document.getElementById('singlebutton');
      
      if (totalImages === 0) {
        warningDiv.style.display = 'block';
        submitButton.disabled = true;
        submitButton.style.backgroundColor = '#ccc';
      } else {
        warningDiv.style.display = 'none';
        submitButton.disabled = false;
        submitButton.style.backgroundColor = '#4CAF50';
      }
    }

    document.getElementById('singlebutton').addEventListener('click', function (event) {
      // Check image count first
      const existingImagesCount = document.getElementById('imagePreview').children.length;
      const newImagesCount = newFiles.length;
      
      if (existingImagesCount + newImagesCount === 0) {
        alert('Product must have at least one image. Please upload new images or keep existing ones.');
        event.preventDefault();
        return;
      }

      var nameInput = document.getElementById('product_name');
      if (!validateName(nameInput.value)) {
        alert('Please enter a valid name.');
        event.preventDefault();
        return;
      }

      var priceInput = document.getElementById('price');
      if (!validatePrice(priceInput.value)) {
        alert('Please enter a valid price.');
        event.preventDefault();
        return;
      }

      var stockInput = document.getElementById('stock');
      if (!validateStock(stockInput.value)) {
        alert('Please enter a valid stock.');
        event.preventDefault();
        return;
      }

      var sizeInput = document.getElementById('size');
      if (!validateSize(sizeInput.value)) {
        alert('Please enter a valid size.');
        event.preventDefault();
        return;
      }

      // Form is valid, allow submission
      return true;
    });

    function validateName(name) {
      return name.trim() !== "";
    }

    function validatePrice(price) {
      var numericPrice = parseFloat(price);
      return !isNaN(numericPrice) && numericPrice > 0;
    }

    function validateStock(stock) {
      var numericStock = parseInt(stock, 10);
      return !isNaN(numericStock) && numericStock >= 0 && Number.isInteger(numericStock);
    }

    function validateSize(size) {
      return size.trim() !== ""; 
    }

    // Initial check on page load
    document.addEventListener('DOMContentLoaded', function() {
      checkImageCount();
    });
  </script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>