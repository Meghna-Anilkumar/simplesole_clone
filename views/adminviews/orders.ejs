<%- include('./sidebar') %>

<style>
  .content {
    margin-left: 240px; /* Matches sidebar width */
    padding: 20px;
    transition: margin-left 0.3s ease;
    min-height: 100vh;
    background-color: #f8f9fa;
  }

  .orders-container {
    margin-top: 20px;
    padding: 0 20px;
  }

  .table-responsive {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }

  table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
    background-color: #ffffff;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    min-width: 800px;
  }

  th, td {
    border: 1px solid #ddd;
    padding: 12px 8px;
    text-align: left;
    font-size: 14px;
    vertical-align: middle;
  }

  th {
    background: linear-gradient(180deg, #2c3e50 0%, #34495e 100%);
    color: #ecf0f1;
    font-weight: 600;
    white-space: nowrap;
  }

  td {
    color: #2c3e50;
  }

  tr:nth-child(even) {
    background-color: #f9f9f9;
  }

  tr:hover {
    background-color: rgba(233, 30, 99, 0.05);
  }

  select {
    padding: 6px 8px;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 14px;
    min-width: 120px;
    background-color: #ffffff;
  }

  select:disabled {
    background-color: #e9ecef;
    cursor: not-allowed;
  }

  a.btn {
    padding: 6px 12px;
    border-radius: 4px;
    font-size: 14px;
    transition: all 0.3s ease;
  }

  .pagination-container {
    margin: 20px 20px 20px 260px; /* Aligned with sidebar */
    text-align: center;
  }

  .pagination {
    display: inline-flex;
    flex-wrap: wrap;
    gap: 5px;
    align-items: center;
  }

  .pagination a {
    color: #2c3e50;
    padding: 8px 16px;
    text-decoration: none;
    border: 1px solid #ddd;
    border-radius: 4px;
    transition: all 0.3s ease;
    font-size: 14px;
  }

  .pagination a.active {
    background: linear-gradient(135deg, #e91e63 0%, #f06292 100%);
    color: #ffffff;
    border-color: #e91e63;
  }

  .pagination a:hover:not(.active) {
    background-color: rgba(233, 30, 99, 0.1);
    border-color: #e91e63;
  }

  .pagination span {
    padding: 8px 4px;
    color: #2c3e50;
    border: none;
  }

  /* Status colors */
  .status-cancelled, .status-returned, .status-rejected {
    color: red;
    font-weight: 600;
  }

  .status-delivered {
    color: green;
    font-weight: 600;
  }

  /* Responsive Design */
  @media (max-width: 992px) {
    .content {
      margin-left: 0;
      padding: 80px 15px 15px 15px;
    }

    .pagination-container {
      margin: 20px 15px;
    }

    .orders-container {
      padding: 0 15px;
    }
  }

  @media (max-width: 768px) {
    .orders-container {
      padding: 0 10px;
    }

    .pagination-container {
      margin: 20px 10px;
    }

    th, td {
      padding: 10px 6px;
      font-size: 13px;
    }

    select, a.btn {
      font-size: 13px;
      padding: 5px 6px;
      min-width: 100px;
    }

    .pagination a, .pagination span {
      padding: 6px 12px;
      font-size: 13px;
    }
  }

  @media (max-width: 576px) {
    .content {
      padding: 70px 10px 10px 10px;
    }

    .orders-container {
      padding: 0 5px;
    }

    .pagination-container {
      margin: 20px 5px;
    }

    table {
      min-width: 600px;
      font-size: 12px;
    }

    th, td {
      padding: 8px 4px;
      font-size: 12px;
    }

    select, a.btn {
      font-size: 12px;
      padding: 4px 5px;
      min-width: 90px;
    }

    .pagination a, .pagination span {
      padding: 5px 10px;
      font-size: 12px;
    }
  }
</style>

<div class="content">
  <div class="orders-container">
    <h2>Orders</h2>

    <div class="table-responsive">
      <table id="ordersTable" class="table table-bordered">
        <thead>
          <tr>
            <th>No.</th>
            <th>Order ID</th>
            <th>User ID</th>
            <th>Purchased On</th>
            <th>Payment Method</th>
            <th>Total Price</th>
            <th>Status</th>
            <th>View</th>
          </tr>
        </thead>
        <tbody>
          <% orders.forEach((order, index) => { %>
            <tr>
              <td><%= (currentPage - 1) * pageSize + index + 1 %></td>
              <td><%= order.orderId %></td>
              <td>
                <% if (order.user) { %>
                  <%= order.user.userId %>
                <% } else { %>
                  User Not Found
                <% } %>
              </td>
              <td><%= order.orderdate.toDateString() %></td>
              <td><%= order.paymentMethod %></td>
              <td><%= order.totalAmount %></td>
              <td>
                <% if (order.orderStatus === 'RETURN REQUESTED') { %>
                  Return Requested
                <% } else if (order.orderStatus === 'CANCELLED') { %>
                  <span class="status-cancelled">Order Cancelled</span>
                <% } else if (order.orderStatus === 'DELIVERED') { %>
                  <span class="status-delivered">Delivered</span>
                <% } else if (order.orderStatus === 'RETURNED') { %>
                  <span class="status-returned">Returned</span>
                <% } else if (order.orderStatus === 'RETURN REJECTED') { %>
                  <span class="status-rejected">Return Rejected</span>
                <% } else { %>
                  <select name="orderStatus" id="orderStatus_<%= order._id %>"
                      onchange="showConfirmModal('<%= order._id %>', this.value)"
                      <%= order.orderStatus === 'CANCELLED' || order.orderStatus === 'DELIVERED' || order.orderStatus === 'RETURNED' || order.orderStatus === 'RETURN REJECTED' ? 'disabled' : '' %>>
                    <option value="PENDING" <%= order.orderStatus === 'PENDING' ? 'selected' : '' %>>Pending</option>
                    <option value="PROCESSING" <%= order.orderStatus === 'PROCESSING' ? 'selected' : '' %>>Processing</option>
                    <option value="SHIPPED" <%= order.orderStatus === 'SHIPPED' ? 'selected' : '' %>>Shipped</option>
                    <option value="DELIVERED" <%= order.orderStatus === 'DELIVERED' ? 'selected' : '' %>>Delivered</option>
                  </select>
                <% } %>
              </td>
              <td><a href="/ordersview/<%= order._id %>" class="btn btn-sm btn-primary">View</a></td>
            </tr>
          <% }) %>
        </tbody>
      </table>
    </div>

    <div class="pagination-container">
      <div class="pagination">
        <% const range = 5; %>
        <% const startPage = Math.max(1, currentPage - range); %>
        <% const endPage = Math.min(totalPages, currentPage + range); %>

        <% if (currentPage > 1) { %>
          <a href="?page=1">&laquo;</a>
        <% } %>
        <% if (startPage > 1) { %>
          <span>...</span>
        <% } %>
        <% for (let i = startPage; i <= endPage; i++) { %>
          <a class="<%= currentPage === i ? 'active' : '' %>" href="?page=<%= i %>"><%= i %></a>
        <% } %>
        <% if (endPage < totalPages) { %>
          <span>...</span>
        <% } %>
        <% if (currentPage < totalPages) { %>
          <a href="?page=<%= totalPages %>">&raquo;</a>
        <% } %>
      </div>
    </div>

    <!-- Bootstrap Confirmation Modal -->
    <div class="modal fade" id="confirmStatusModal" tabindex="-1" aria-labelledby="confirmStatusModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="confirmStatusModalLabel">Confirm Order Status Change</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            Are you sure you want to change the order status to "<span id="newStatus"></span>"?
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="cancelStatusChange">Cancel</button>
            <button type="button" class="btn btn-primary" id="confirmStatusChange">Confirm</button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  let currentOrderId = null;
  let currentSelectElement = null;

  function showConfirmModal(orderId, newOrderStatus) {
    currentOrderId = orderId;
    currentSelectElement = document.getElementById(`orderStatus_${orderId}`);
    currentSelectElement.dataset.previousValue = currentSelectElement.dataset.previousValue || currentSelectElement.value;
    
    document.getElementById('newStatus').textContent = newOrderStatus;
    
    const modal = new bootstrap.Modal(document.getElementById('confirmStatusModal'));
    modal.show();
  }

  document.getElementById('confirmStatusChange').addEventListener('click', () => {
    const newOrderStatus = document.getElementById(`orderStatus_${currentOrderId}`).value;
    
    fetch(`/updateOrderStatus/${currentOrderId}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ orderStatus: newOrderStatus }),
    })
      .then(response => {
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
      })
      .then(updatedOrder => {
        Swal.fire({
          icon: 'success',
          title: 'Success',
          text: 'Order status updated successfully'
        });
        currentSelectElement.dataset.previousValue = newOrderStatus;
        const modal = bootstrap.Modal.getInstance(document.getElementById('confirmStatusModal'));
        modal.hide();
      })
      .catch(error => {
        console.error('Error updating order status:', error);
        currentSelectElement.value = currentSelectElement.dataset.previousValue || 'PENDING';
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'Failed to update order status'
        });
        const modal = bootstrap.Modal.getInstance(document.getElementById('confirmStatusModal'));
        modal.hide();
      });
  });

  document.getElementById('cancelStatusChange').addEventListener('click', () => {
    currentSelectElement.value = currentSelectElement.dataset.previousValue || 'PENDING';
  });

  document.getElementById('confirmStatusModal').addEventListener('hidden.bs.modal', () => {
    if (currentSelectElement) {
      currentSelectElement.value = currentSelectElement.dataset.previousValue || 'PENDING';
    }
  });

  // $(document).ready(function () {
  //   $('#ordersTable').DataTable({
  //     columnDefs: [
  //       { orderable: false, targets: [6, 7] } // Disable sorting on Status and View columns
  //     ],
  //     responsive: true,
  //     pageLength: <%= pageSize %>,
  //     pagingType: 'simple_numbers',
  //     language: {
  //       paginate: {
  //         previous: '&laquo;',
  //         next: '&raquo;'
  //       }
  //     }
  //   });
  // });
</script>