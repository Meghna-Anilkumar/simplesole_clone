<%- include('./sidebar') %>
<style>
  body {
    margin: 0;
    font-family: Arial, sans-serif;
  }

  #content {
    margin-left: 150px;
    padding: 20px;
  }

  table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
  }

  th,
  td {
    border: 1px solid #ddd;
    padding: 8px;
    text-align: left;
  }

  th {
    background-color: #333;
    color: white;
  }

  .pagination {
    margin-top: 20px;
  }

  .pagination a {
    color: black;
    float: left;
    padding: 8px 16px;
    text-decoration: none;
    transition: background-color .3s;
  }

  .pagination a.active {
    background-color: #4caf50;
    color: white;
  }

  .pagination a:hover:not(.active) {
    background-color: #ddd;
  }
</style>
<div id="content">
  <h1>Orders</h1>

  <table id="ordersTable" class="display">
    <thead>
      <tr>
        <th>No.</th>
        <th>Order ID</th>
        <th>User ID</th>
        <th>Purchased On</th>
        <th>Payment Method</th>
        <th>Total Price</th>
        <th>Status</th>
        <th>View</th>
      </tr>
    </thead>
    <tbody>
      <% orders.forEach((order, index) => { %>
        <tr>
          <td><%= (currentPage - 1) * pageSize + index + 1 %></td>
          <td><%= order.orderId %></td>
          <td>
            <% if (order.user) { %>
              <%= order.user.userId %>
            <% } else { %>
              User Not Found
            <% } %>
          </td>
          <td><%= order.orderdate.toDateString() %></td>
          <td><%= order.paymentMethod %></td>
          <td><%= order.totalAmount %></td>
          <td>
            <% if (order.orderStatus === 'RETURN REQUESTED') { %>
               Return Requested
            <% } else if (order.orderStatus === 'CANCELLED') { %>
                <span style="color: red;">Order Cancelled</span>
            <% } else if (order.orderStatus === 'DELIVERED') { %>
                <span style="color: green;">Delivered</span>
            <% } else if (order.orderStatus === 'RETURNED') { %>
                <span style="color: red;">Returned</span>
            <% } else if (order.orderStatus === 'RETURN REJECTED') { %>
                <span style="color: red;">Return Rejected</span>
            <% } else { %>
                <select name="orderStatus" id="orderStatus_<%= order._id %>"
                    onchange="showConfirmModal('<%= order._id %>', this.value)"
                    <%= order.orderStatus === 'CANCELLED' || order.orderStatus === 'DELIVERED' || order.orderStatus === 'RETURNED' || order.orderStatus === 'RETURN REJECTED' ? 'disabled' : '' %>>
                    <option value="PENDING" <%= order.orderStatus === 'PENDING' ? 'selected' : '' %>>Pending</option>
                    <option value="PROCESSING" <%= order.orderStatus === 'PROCESSING' ? 'selected' : '' %>>Processing</option>
                    <option value="SHIPPED" <%= order.orderStatus === 'SHIPPED' ? 'selected' : '' %>>Shipped</option>
                    <option value="DELIVERED" <%= order.orderStatus === 'DELIVERED' ? 'selected' : '' %>>Delivered</option>
                </select>
            <% } %>
          </td>
          <td><a href="/ordersview/<%= order._id %>">View</a></td>
        </tr>
      <% }); %>
    </tbody>
  </table>

  <div class="pagination">
    <% const range = 5; %>
    <% const startPage = Math.max(1, currentPage - range); %>
    <% const endPage = Math.min(totalPages, currentPage + range); %>

    <% if (currentPage > 1) { %>
      <a href="?page=1">&laquo;</a>
    <% } %>
    <% if (startPage > 1) { %>
      <span>...</span>
    <% } %>
    <% for (let i = startPage; i <= endPage; i++) { %>
      <a class="<%= currentPage === i ? 'active' : '' %>" href="?page=<%= i %>"><%= i %></a>
    <% } %>
    <% if (endPage < totalPages) { %>
      <span>...</span>
    <% } %>
    <% if (currentPage < totalPages) { %>
      <a href="?page=<%= totalPages %>">&raquo;</a>
    <% } %>
  </div>

  <!-- Bootstrap Confirmation Modal -->
  <div class="modal fade" id="confirmStatusModal" tabindex="-1" aria-labelledby="confirmStatusModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="confirmStatusModalLabel">Confirm Order Status Change</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          Are you sure you want to change the order status to "<span id="newStatus"></span>"?
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="cancelStatusChange">Cancel</button>
          <button type="button" class="btn btn-primary" id="confirmStatusChange">Confirm</button>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  let currentOrderId = null;
  let currentSelectElement = null;

  function showConfirmModal(orderId, newOrderStatus) {
    currentOrderId = orderId;
    currentSelectElement = document.getElementById(`orderStatus_${orderId}`);
    // Store the previous value for reversion
    currentSelectElement.dataset.previousValue = currentSelectElement.dataset.previousValue || currentSelectElement.value;
    
    // Update modal content
    document.getElementById('newStatus').textContent = newOrderStatus;
    
    // Show the modal
    const modal = new bootstrap.Modal(document.getElementById('confirmStatusModal'));
    modal.show();
  }

  // Handle confirm button click
  document.getElementById('confirmStatusChange').addEventListener('click', () => {
    const newOrderStatus = document.getElementById(`orderStatus_${currentOrderId}`).value;
    
    fetch(`/updateOrderStatus/${currentOrderId}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ orderStatus: newOrderStatus }),
    })
      .then(response => {
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
      })
      .then(updatedOrder => {
        console.log('Order status updated:', updatedOrder);
        // Update the stored previous value
        currentSelectElement.dataset.previousValue = newOrderStatus;
        // Close the modal
        const modal = bootstrap.Modal.getInstance(document.getElementById('confirmStatusModal'));
        modal.hide();
      })
      .catch(error => {
        console.error('Error updating order status:', error);
        // Revert dropdown on error
        currentSelectElement.value = currentSelectElement.dataset.previousValue || 'PENDING';
        // Close the modal
        const modal = bootstrap.Modal.getInstance(document.getElementById('confirmStatusModal'));
        modal.hide();
      });
  });

  // Handle cancel button click or modal close
  document.getElementById('cancelStatusChange').addEventListener('click', () => {
    // Revert dropdown to previous value
    currentSelectElement.value = currentSelectElement.dataset.previousValue || 'PENDING';
  });

  // Revert dropdown when modal is closed without confirming
  document.getElementById('confirmStatusModal').addEventListener('hidden.bs.modal', () => {
    if (currentSelectElement) {
      currentSelectElement.value = currentSelectElement.dataset.previousValue || 'PENDING';
    }
  });
</script>

<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
<script>
  $(document).ready(function () {
    $('#ordersTable').DataTable({
      // Ensure DataTable doesn't interfere with select elements
      columnDefs: [
        { orderable: false, targets: [6, 7] } // Disable sorting on Status and View columns
      ]
    });
  });
</script>