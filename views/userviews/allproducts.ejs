<%- include('./header') %>
<style>
  @import url("https://fonts.googleapis.com/css2?family=Poppins&display=swap");

  * {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    font-family: "Poppins", sans-serif;
  }

  body {
    background-color: #f4f4f4;
    padding-top: 80px;
  }

  .container {
    max-width: 1200px;
    margin: 20px auto;
    padding: 0 15px;
  }

  #search-bar {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    align-items: center;
    margin-bottom: 30px;
    background-color: #fff;
    padding: 15px;
    border-radius: 8px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  }

  #searchForm {
    display: flex;
    flex: 1;
    gap: 10px;
  }

  #searchInput {
    flex: 1;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 4px;
    font-size: 1rem;
  }

  .css-huh2rh {
    padding: 10px 20px;
    font-size: 1rem;
    font-weight: 600;
    border-radius: 4px;
    background-color: #fff;
    color: rgb(255, 63, 108);
    border: 1px solid rgb(255, 63, 108);
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .css-huh2rh:hover {
    background-color: rgb(255, 63, 108);
    color: #fff;
  }

  #colorFilter,
  #sizeFilter,
  #sortOption {
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 4px;
    font-size: 1rem;
    color: #333;
    background-color: #fff;
  }

  #sort-by {
    display: flex;
    align-items: center;
    gap: 10px;
  }

  #productList {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 20px;
  }

  .card {
    background-color: #fff;
    border-radius: 8px;
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    height: 380px;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 15px;
    border: 1px solid #ddd;
    position: relative;
  }

  .card:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(253, 154, 108, 0.3);
  }

  .card-img {
    width: 100%;
    height: 180px;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    position: relative;
  }

  .card-img img {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
    transition: transform 0.3s ease;
  }

  .card-img:hover img {
    transform: scale(1.2);
  }

  .product-name {
    font-size: 1.1rem;
    font-weight: 600;
    margin: 10px 0;
    text-align: center;
  }

  .price {
    font-size: 1rem;
    color: #333;
  }

  .price s {
    color: red;
    margin-right: 5px;
  }

  .offer-details {
    font-size: 0.9rem;
    color: rgb(255, 63, 108);
    margin-top: 5px;
    text-align: center;
  }

  .discount-badge {
    position: absolute;
    top: 10px;
    right: 10px;
    background-color: #ff935d;
    color: #fff;
    padding: 5px 10px;
    border-radius: 4px;
    font-size: 0.9rem;
    font-weight: bold;
    z-index: 2;
  }

  .pagination-container {
    margin-top: 30px;
    display: flex;
    justify-content: center;
  }

  .pagination {
    display: inline-flex;
    gap: 5px;
  }

  .pagination .page-item .page-link {
    color: #333;
    border: 1px solid #ddd;
    border-radius: 4px;
    padding: 8px 12px;
    font-size: 1rem;
    transition: background-color 0.3s ease;
  }

  .pagination .page-item.active .page-link {
    background-color: rgb(255, 63, 108);
    color: #fff;
    border-color: rgb(255, 63, 108);
  }

  .pagination .page-item .page-link:hover {
    background-color: #f0f0f0;
  }

  .pagination .page-item.disabled .page-link {
    color: #999;
    cursor: not-allowed;
  }

  @media (max-width: 767px) {
    body {
      padding-top: 60px;
    }

    #search-bar {
      flex-direction: column;
      align-items: stretch;
    }

    #searchForm {
      width: 100%;
    }

    #searchInput {
      width: 100%;
    }

    #sort-by {
      width: 100%;
      justify-content: space-between;
    }

    #colorFilter,
    #sizeFilter,
    #sortOption {
      width: 100%;
    }
  }

  @media (max-width: 575px) {
    #productList {
      grid-template-columns: 1fr;
    }

    .pagination {
      flex-wrap: wrap;
      justify-content: center;
    }

    .card-img {
      position: relative;
      width: 100%;
      height: 180px;
      overflow: hidden;
    }

    .card-img a {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      display: block;
      text-decoration: none;
      z-index: 1;
    }

    .card-img img {
      pointer-events: none;
      max-width: 100%;
      max-height: 100%;
      object-fit: contain;
    }
  }
</style>

<div class="container">
  <div id="search-bar">
    <form id="searchForm" action="/search" method="GET" class="search-form">
      <input
        type="text"
        name="query"
        id="searchInput"
        placeholder="Search for products"
        value="<%= searchQuery || '' %>"
      />
      <button type="submit" class="css-huh2rh">Search</button>
    </form>
    <select id="colorFilter">
      <option value="">All Colors</option>
      <option value="black">Black</option>
      <option value="brown">Brown</option>
      <option value="white">White</option>
      <option value="lilac">Lilac</option>
    </select>
    <select id="sizeFilter">
      <option value="">All Sizes</option>
      <option value="4">4</option>
      <option value="5">5</option>
      <option value="6">6</option>
    </select>
    <div id="sort-by">
      <label for="sortOption">Sort by:</label>
      <select id="sortOption" name="sortOption">
        <option value="priceLowToHigh">Price: Low to High</option>
        <option value="priceHighToLow">Price: High to Low</option>
      </select>
      <button id="applySort" class="css-huh2rh">Apply</button>
    </div>
  </div>

  <div id="productList">
    <% allProducts.filter(product => !product.category.blocked && !product.blocked).forEach(product => { %>
    <div class="filter-products">
      <div class="card">
        <div class="product-name"><%= product.name %></div>
        <% 
          const productOffer = productOffers.find(offer => offer.product._id.toString() === product._id.toString() && new Date() >= new Date(offer.startDate) && new Date() <= new Date(offer.expiryDate)); 
          const categoryOffer = categoryOffers.find(offer => offer.category._id.toString() === product.category.toString() && new Date() >= new Date(offer.startDate) && new Date() <= new Date(offer.expiryDate));
          let displayPrice = product.price;
          let offerDescription = '';
          let discountPercentage = 0;
          
          if (productOffer) {
            displayPrice = productOffer.newPrice;
            offerDescription = `${productOffer.discountPercentage}% OFF`;
            discountPercentage = productOffer.discountPercentage;
          } else if (categoryOffer && product.categoryofferprice && product.categoryofferprice < product.price) {
            displayPrice = product.categoryofferprice;
            offerDescription = `${categoryOffer.discountPercentage}% OFF`;
            discountPercentage = categoryOffer.discountPercentage;
          }
        %>
        <% if (productOffer || (categoryOffer && product.categoryofferprice < product.price)) { %>
        <div class="discount-badge">
          <%= discountPercentage %>% OFF
        </div>
        <% } %>
        <a href="/products/<%= product._id %>" class="product-link">
          <div class="card-img">
            <img src="<%= product.images[0] %>" alt="<%= product.name %>" />
          </div>
        </a>
        <div class="price">
          <% if (displayPrice < product.price) { %>
            <s>₹<%= product.price.toFixed(2) %></s> ₹<%= displayPrice.toFixed(2) %>
          <% } else { %>
            ₹<%= product.price.toFixed(2) %>
          <% } %>
        </div>
        <% if (offerDescription) { %>
          <div class="offer-details"><%= offerDescription %></div>
        <% } %>
      </div>
    </div>
    <% }) %>
  </div>

  <div class="pagination-container">
    <nav aria-label="Page navigation">
      <ul class="pagination">
        <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
          <a class="page-link" href="?page=<%= currentPage - 1 %>" aria-label="Previous">
            <span aria-hidden="true">«</span>
          </a>
        </li>
        <% for (let i = 1; i <= totalPages; i++) { %>
        <li class="page-item <%= currentPage === i ? 'active' : '' %>">
          <a class="page-link" href="?page=<%= i %>"><%= i %></a>
        </li>
        <% } %>
        <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
          <a class="page-link" href="?page=<%= currentPage + 1 %>" aria-label="Next">
            <span aria-hidden="true">»</span>
          </a>
        </li>
      </ul>
    </nav>
  </div>
</div>

<script>
  document.getElementById("applySort").addEventListener("click", function (event) {
    event.preventDefault();
    const sortOption = document.getElementById("sortOption").value;
    const colorFilter = document.getElementById("colorFilter").value;
    const sizeFilter = document.getElementById("sizeFilter").value;
    const searchQuery = document.getElementById("searchInput").value;
    fetchFilteredProducts(colorFilter, sizeFilter, searchQuery, sortOption);
  });

  function fetchAllProducts() {
    fetch(`/allProducts?json=true&t=${new Date().getTime()}`)
      .then((response) => response.json())
      .then((data) => {
        updateProductList(data);
      })
      .catch((error) => console.error("Error fetching all products:", error));
  }

  function fetchFilteredProducts(colorFilter, sizeFilter, searchQuery, sortOption) {
    let url = `/filteredProducts?color=${encodeURIComponent(colorFilter)}&size=${encodeURIComponent(sizeFilter)}&t=${new Date().getTime()}`;
    if (searchQuery) url += `&query=${encodeURIComponent(searchQuery)}`;
    if (sortOption) url += `&sortOption=${encodeURIComponent(sortOption)}`;
    fetch(url)
      .then((response) => response.json())
      .then((data) => {
        updateProductList(data);
      })
      .catch((error) => console.error("Error fetching filtered products:", error));
  }

  function handleSearchFormSubmit(event) {
    event.preventDefault();
    const searchQuery = document.getElementById("searchInput").value;
    const colorFilter = document.getElementById("colorFilter").value;
    const sizeFilter = document.getElementById("sizeFilter").value;
    const sortOption = document.getElementById("sortOption").value;
    fetchFilteredProducts(colorFilter, sizeFilter, searchQuery, sortOption);
  }

  document.getElementById("searchForm").addEventListener("submit", handleSearchFormSubmit);

  function updateProductList(products) {
    const productList = document.getElementById("productList");
    productList.innerHTML = "";

    products.forEach((product) => {
      const imageURL = `${product.images[0]}`;
      let displayPrice = product.price;
      let offerDescription = '';
      let discountBadge = '';

      // Fetch offers for dynamic products
      fetch(`/productOffers?productId=${product._id}&t=${new Date().getTime()}`)
        .then(response => response.json())
        .then(offers => {
          const productOffer = offers.find(offer => new Date() >= new Date(offer.startDate) && new Date() <= new Date(offer.expiryDate));
          if (productOffer) {
            displayPrice = productOffer.newPrice;
            offerDescription = `${productOffer.discountPercentage}% OFF`;
            discountBadge = `<div class="discount-badge">${productOffer.discountPercentage}% OFF</div>`;
          } else if (product.categoryofferprice && product.categoryofferprice < product.price) {
            // Calculate category discount percentage
            const discountPercentage = Math.round(((product.price - product.categoryofferprice) / product.price) * 100);
            displayPrice = product.categoryofferprice;
            offerDescription = `${discountPercentage}% OFF`;
            discountBadge = `<div class="discount-badge">${discountPercentage}% OFF</div>`;
          }

          const productCard = `
            <div class="filter-products">
              <div class="card">
                <div class="product-name">${product.name}</div>
                ${discountBadge}
                <a href="/products/${product._id}" class="product-link">
                  <div class="card-img">
                    <img src="${imageURL}" alt="${product.name}" style="pointer-events: none;" />
                  </div>
                </a>
                <div class="price">
                  ${displayPrice < product.price ? `<s>₹${product.price.toFixed(2)}</s> ₹${displayPrice.toFixed(2)}` : `₹${product.price.toFixed(2)}`}
                </div>
                ${offerDescription ? `<div class="offer-details">${offerDescription}</div>` : ''}
              </div>
            </div>`;
          productList.insertAdjacentHTML("beforeend", productCard);
        })
        .catch(error => {
          console.error("Error fetching offers:", error);
          // Fallback without offers
          const productCard = `
            <div class="filter-products">
              <div class="card">
                <div class="product-name">${product.name}</div>
                <a href="/products/${product._id}" class="product-link">
                  <div class="card-img">
                    <img src="${imageURL}" alt="${product.name}" style="pointer-events: none;" />
                  </div>
                </a>
                <div class="price">₹${product.price.toFixed(2)}</div>
              </div>
            </div>`;
          productList.insertAdjacentHTML("beforeend", productCard);
        });
    });
  }

  document.getElementById("colorFilter").addEventListener("change", function () {
    const colorFilter = this.value;
    const sizeFilter = document.getElementById("sizeFilter").value;
    const searchQuery = document.getElementById("searchInput").value;
    const sortOption = document.getElementById("sortOption").value;
    fetchFilteredProducts(colorFilter, sizeFilter, searchQuery, sortOption);
  });

  document.getElementById("sizeFilter").addEventListener("change", function () {
    const sizeFilter = this.value;
    const colorFilter = document.getElementById("colorFilter").value;
    const searchQuery = document.getElementById("searchInput").value;
    const sortOption = document.getElementById("sortOption").value;
    fetchFilteredProducts(colorFilter, sizeFilter, searchQuery, sortOption);
  });

  fetchAllProducts();
</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"></script>
<%- include('./footer') %>