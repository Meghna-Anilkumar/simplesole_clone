<%-include('./header')%>
  <style>
    .summary {
      background-color: #ddd;
      border-radius: 8px;
      /* border-bottom-right-radius: 1rem; */
      padding: 4vh;
      color: rgb(65, 65, 65);
    }

    @media(max-width:767px) {
      .summary {
        border-top-right-radius: unset;
        border-bottom-left-radius: 1rem;
      }
    }

    .summary .col-2 {
      padding: 0;
    }

    .summary .col-10 {
      padding: 0;
    }

    .row {
      margin: 0;
    }

    .content {
      margin-left: 150px;
    }

    .container {
      max-width: 100%;
    }

    *,
    *:after,
    *:before {
      box-sizing: border-box;
    }

    ul {
      padding-left: 10px;
    }

    a {
      color: #000;
    }

    .secure,
    .backBtn {
      display: flex;
    }

    .secure span,
    .backBtn span {
      margin-left: 5px;
    }

    .backBtn {
      margin-top: 20px;
    }

    .secure {
      color: #afb5c0;
      align-items: flex-end;
    }

    .secure .icon {
      font-size: 20px;
      line-height: 20px;
    }

    .logo {
      font-size: 20px;
      font-weight: bold;
      display: flex;
      justify-content: center;
      align-items: flex-end;
    }

    .logo .icon {
      font-size: 32px;
      line-height: 32px;
      margin-right: 5px;
    }

    img {
      width: 100%;
      border-radius: 8px 0 0 8px;
    }

    .details {
      max-width: 800px;
      min-height: 300px;
      margin-left: auto;
      margin-right: auto;
      margin-top: -200px;
      background: #fff;
      border-radius: 8px;
      display: flex;
      flex-direction: column;
      position: relative;
    }

    .details__item {
      display: flex;
    }

    .details__user {
      background: #f6f9fc;
      padding: 20px;
      border-radius: 8px;
      border: 1px solid #dadada;
    }

    .item__quantity {
      position: absolute;
      right: 50px;
      top: 30px;
      font-size: 20px;
    }

    .item__image {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .item__image .iphone {
      margin-top: -50px;
      margin-left: -100px;
      width: 200px;
    }

    .item__details {
      padding: 30px;
    }

    .item__title {
      font-size: 28px;
      font-weight: 600;
    }

    .item__price {
      font-size: 22px;
      color: #bec3cb;
    }

    .icon {
      font-size: 16px;
      vertical-align: middle;
    }

    header {
      background-color: #f6f9fc;
      min-height: 500px;
      background-image: url("../images/pattern.png");
    }

    .navigation {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 50px 0 80px 0;
      color: #246eea;
      font-size: 14px;
      text-transform: uppercase;
      letter-spacing: 1px;
      font-weight: 700;
    }

    .container {
      width: 960px;
      margin: 0 auto;
    }

    .shadow {
      box-shadow: 0 15px 35px rgba(50, 50, 93, 0.1), 0 5px 15px rgba(0, 0, 0, 0.07);
    }

    .row {
      display: flex;
    }

    .txt {
      border-color: #e1e8ee;
      width: 100%;
    }

    .input {
      border-radius: 5px;
      border-style: solid;
      border-width: 2px;
      height: 48px;
      padding-left: 15px;
      font-weight: 600;
      font-size: 14px;
      color: #5e6977;
    }

    input[type="text"] {
      display: initial;
      padding: 15px;
    }

    .text-validated {
      border-color: #7dc855;
      background-image: url("../images/icon-tick.png");
      background-repeat: no-repeat;
      background-position: right 18px center;
    }

    .ddl {
      border-color: #f0f4f7;
      background-color: #f0f4f7;
      width: 100px;
      margin-right: 10px;
    }

    .title {
      font-size: 14px;
      padding-bottom: 8px;
    }

    .field {
      padding-top: 15px;
      padding-right: 30px;
      width: 50%;
    }

    .field.small {
      width: auto;
    }

    .notification {
      text-align: center;
      font-size: 28px;
      font-weight: 600;
      display: flex;
      justify-content: center;
    }

    .notification .icon {
      font-size: 28px;
      color: #7dc855;
      line-height: 28px;
      margin-right: 10px;
    }

    .actions {
      display: flex;
      align-items: center;
      justify-content: center;
      flex-direction: column;
      padding: 60px 0 40px 0;
    }

    .payment {
      padding: 20px 0 0 0;
    }

    .payment__title {
      margin: 40px 0 20px 0;
      font-size: 18px;
      display: flex;
      text-align: left;
    }

    .payment__title .icon {
      margin-right: 10px;
    }

    .btn {
      font-family: "Josefin Sans", sans-serif;
      border-radius: 8px;
      border: 0;
      letter-spacing: 1px;
      color: #fff;
      background: #246eea;
      padding: 20px 60px;
      white-space: nowrap;
      font-size: 16px;
      line-height: 1;
      text-transform: uppercase;
      transition: all 0.15s ease;
      text-decoration: none;
    }

    .btn .icon {
      margin-left: 10px;
      font-size: 20px;
    }

    .btn:hover {
      -webkit-transform: translateY(-1px);
      transform: translateY(-1px);
      background: #4984ea;
    }

    .btn.action__back {
      background: transparent;
      color: #a0a0a0;
    }

    .payment__types {
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .payment__info {
      display: flex;
    }

    .payment__cc {
      flex: 60%;
    }

    .payment__shipping {
      flex: 40%;
    }

    .shipping__info {
      background: #f6f9fc;
      padding: 10px;
      border-radius: 8px;
    }

    .payment__type {
      display: flex;
      border: 2px solid #d9d9d9;
      border-radius: 8px;
      padding: 5px 5px;
      width: 50%;
      justify-content: center;
      align-items: center;
      cursor: pointer;
      color: #0f0606;
      transition: all 0.15s ease;
    }

    .payment__type:hover {
      -webkit-transform: translateY(-1px);
      transform: translateY(-1px);
    }

    .payment__type .icon {
      font-size: 32px;
      margin-right: 10px;
    }

    .payment__type+.payment__type {
      margin-left: 10px;
    }

    .icon-xl {
      font-size: 48px;
      line-height: 48px;
    }

    .content {
      display: block;
    }

    .css-huh2rh {
      padding: 8px 16px;
      font-size: 12px;
      font-weight: 700;
      border-radius: 2px;
      background-color: rgb(255, 255, 255) !important;
      color: rgb(255, 63, 108);
      border-color: rgb(255, 63, 108);
      border-width: 1px;
      border-style: solid;
      cursor: pointer;
    }

    .button-base-button {
      color: #fff;
      font-size: 14px;
      font-weight: 700;
      padding: 10px;
      background: #ff3f6c;
      cursor: pointer;
      text-align: center;
      border: none;
      border-radius: 2px;
      letter-spacing: 1px;
    }

    .coupon-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
  }

  .coupon {
    border: 2px solid #ff69b4; /* Pink border color */
    background-color: #fff; /* White background color */
    padding: 10px;
    margin-bottom: 10px;
    border-radius: 8px;
    max-width: 200px; /* Limiting the maximum width */
  }

  .coupon p {
    margin: 5px 0;
  }
  .payment__type.disabled label {
    color: #999; /* Change label color */
    cursor: not-allowed; /* Change cursor */
  }

  .payment__type label {
    color: #333; /* Default label color */
    cursor: pointer; /* Default cursor */
  }

  /* Style for error message */
  .error-message {
    color: red;
    font-size: 14px;
    margin-top: 5px;
  }
  </style>

  <div class="container">
    <div class="navigation">
      <div class="logo">
        <i class="icon icon-basket"></i>
      </div>
      <div class="secure">
        <i class="icon icon-shield"></i>
        <span></span>
      </div>
    </div>
    <div class="notification">
      Complete Your Purchase
    </div>
    <% if (typeof error !== 'undefined') { %>
      <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <%= error %>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
      </div>
    <% } %> 
  </div>
  <div class="container">
    <br>
    <div class="col-md-4 summary">
      <div>
        <h5><b>Summary</b></h5>
      </div>
      <hr>
      <div class="row">
        <div class="col" style="padding-left:0;">
          <%= cart.items.length %> ITEMS
        </div>
        <div class="col text-right">&#8377;<%= cart.total %>
        </div>
      </div>
      <div class="row">
        <div class="col" style="padding-left:0;">
         COUPON DISCOUNT
        </div>
        <div class="col text-right">
          <% if (typeof discount !== 'undefined') { %>
              &#8377;<%= discount.toFixed(2) %>
          <% } else { %>
              <!-- Handle case where discount is not defined -->
              <!-- Maybe display a message or leave it blank -->
          <% } %>
      </div>
      
      </div>
<BR>
      <p>APPLY COUPON</p>
                <input id="code" placeholder="Enter coupon code" name="couponcode">
                <button id="applyCouponBtn" class="button-base-button" data-applied="false">Apply</button>


      <div class="row" style="border-top: 1px solid rgba(0,0,0,.1); padding: 2vh 0;">
        <div class="col">TOTAL PRICE</div>
        <div class="col text-right">&#8377;<span id="newTotal"><%= cart.total %></span></div>

        </div>
      </div>
    </div>
  </div>
<br>
  <div class="container">
    <button id="viewCouponsBtn" class="button-base-button">View Available Coupons</button>
    <div class="coupon-container" id="couponsContainer">
    </div>
  </div>

  <div class="col-md-8 payment__shipping" id="shippingInfoContainer" style="margin-left: 170px;">
    <div class="payment__title">
      <i class="icon icon-plane"></i> Select Shipping Address
    </div>
    <button class="css-huh2rh" id="openAddressModal" type="button" style="background-color: blueviolet;">
      <i class="fas fa-plus"></i> Add Address
    </button>

    <%- include('./addaddress') %>

  </div>
<br>

  <div class="container">
    <!-- <div class="actions"> -->
    <form action="/placeOrder" method="post">

      <input type="hidden" id="appliedCouponCode" name="appliedCouponCode" value="">
      <div class="addresses-container">
        <% addresses.forEach(address=> { %>
          <div class="details__user" id="<%= 'user_' + address._id %>">
            <input type="radio" name="selectedAddress" id="<%= 'radio_' + address._id %>" value="<%= address._id %>">
            <div class="user__name">
              <%= address.name %><br>
                Shipping Address: <%= address.buildingname %>, <%= address.street %>, <%= address.city %>, <%=
                        address.state %>, <%= address.pincode %>, TYPE:<%= address.addresstype %><br>
            </div>
          </div>
          <% }); %>
      </div>

      <div class="payment">
        <div class="payment__title">
          Select Payment Method
        </div>
      
        <div class="payment__types">
          <div class="payment__type payment__type--cc active <% if (cart.total > 1000) { %> disabled <% } %>">
            <input type="radio" name="paymentMethod" id="paymentCC" value="CASH_ON_DELIVERY" <% if (cart.total > 1000) { %> disabled <% } %>>
            <label for="paymentCC"><i class="icon icon-credit-card"></i>CASH ON DELIVERY</label>
            <% if (cart.total > 1000) { %>
              <div class="error-message">COD not available for orders above 1000</div>
            <% } %>
          </div>
          <div class="payment__type payment__type--paypal">
            <input type="radio" name="paymentMethod" id="paymentWallet" value="WALLET">
            <label for="paymentWallet"><i class="icon icon-paypal"></i>WALLET</label>
          </div>
          <div class="payment__type payment__type--paypal">
            <input type="radio" name="paymentMethod" id="paymentRazorpay" value="RAZORPAY">
            <label for="paymentRazorpay"><i class="icon icon-wallet"></i>RAZORPAY</label>
          </div>
        </div>
        <br>
      
        <button type="submit" class="button-base-button" id="placeorderButton">Place your Order
          <i class="icon icon-arrow-right-circle"></i>
        </button>
        <a href="#" class="backBtn">Go Back to Shop</a>
      </div>
  </div>
  </form>
  </div>
  <!-- </section> -->

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10">
  </script>
  <script>
    document.getElementById('openAddressModal').addEventListener('click', function () {
      $('#addressModal').modal('show');
    });

    document.getElementById('addressForm').addEventListener('submit', function (event) {
      event.preventDefault();

      const addressData = {
        name: document.getElementById('addressName').value,
        mobile: document.getElementById('mobileNumber').value,
        buildingname: document.getElementById('buildingname').value,
        street: document.getElementById('street').value,
        city: document.getElementById('city').value,
        state: document.getElementById('state').value,
        pincode: document.getElementById('PIN Code').value,
        addresstype: document.querySelector('input[name="addressType"]:checked').value
      };

      fetch('/saveAddress', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(addressData),
      })
        .then(response => response.json())
        .then(data => {
          console.log('Address saved:', data);

          document.getElementById('addressForm').reset();

          $('#addressModal').modal('hide');
        })
        .catch(error => console.error('Error saving address:', error));
      window.location.reload();
    });
  </script>
  <script>
    async function fetchAddresses() {
      try {
        const response = await fetch('/getaddresses');
        const addresses = await response.json();

        const addressesContainer = document.getElementById('addressesContainer');
        addresses.forEach(address => {
          const addressDiv = document.createElement('div');
          addressDiv.className = 'user__name';
          addressDiv.innerHTML = `${address.name}<br>${address.dob}<br>Shipping Address: ${address.street}, ${address.city}<br>${address.country}`;
          addressesContainer.appendChild(addressDiv);
        });
      } catch (error) {
        console.error('Error fetching addresses:', error);
      }
    }
    window.onload = fetchAddresses;
  </script>


  <script>
    document.getElementById('placeorderButton').addEventListener('click', async function (event) {
      event.preventDefault();

      const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');
      const selectedPaymentMethod = document.querySelector('input[name="paymentMethod"]:checked');
      const appliedCouponCode = document.getElementById('appliedCouponCode').value;

      if (!selectedAddress) {
        Swal.fire({
          text: 'Please select a shipping address.',
          icon: 'error',
        })
        return;
      }

      if (!selectedPaymentMethod) {
        Swal.fire({
          text: 'Please select a payment method.',
          icon: 'error',
        });
        return;
      }

      if (selectedPaymentMethod.value === 'RAZORPAY') {
        var options = {
          key: "rzp_test_RXM5ojGKCHke94",
          amount: "<%= cart.newTotal ? cart.newTotal * 100 : cart.total * 100 %>",
          currency: "INR",
          name: "Simple Sole",
          description: "Test Transaction",
          image: "https://example.com/your_logo",
          order_id: "<%= order.id %>",
          handler: function (response) {
            fetch("/process-payment", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({
                payment_id: response.razorpay_payment_id,
                order_id: "order_IluGWxBm9U8zJ8",
                signature: response.razorpay_signature,
                paymentMethod: selectedPaymentMethod.value,
                selectedAddress: selectedAddress.value,
              }),
            })
              .then((response) => response.json())
              .then((data) => {
                console.log("Payment details sent to the server:", data);
                if (data.success) {
                }
              })
             
              .catch((error) => {
                console.error("Error sending payment details to the server:", error);
              });
              window.location.href ='/successpage'
            return this;
          },
          notes: {
            address: "Razorpay Corporate Office",
          },
          theme: {
            color: "#3399cc",
          },
        };
        var rzp1 = new Razorpay(options);
        rzp1.on("payment.failed", function (response) {
          alert(response.error.code);
          alert(response.error.description);
          alert(response.error.source);
          alert(response.error.step);
          alert(response.error.reason);
          alert(response.error.metadata.order_id);
          alert(response.error.metadata.payment_id);
        })
        rzp1.open()
      }
  document.getElementById('placeorderButton').closest('form').submit()

});
    
  </script>
   <script src="https://checkout.razorpay.com/v1/checkout.js"></script>


   <script>
    document.addEventListener("DOMContentLoaded", async function () {
        const viewCouponsBtn = document.getElementById('viewCouponsBtn');
        const couponsContainer = document.getElementById('couponsContainer');

        viewCouponsBtn.addEventListener('click', async () => {
            try {
                const response = await fetch('/coupons');
                const coupons = await response.json();

                couponsContainer.innerHTML = '';

                coupons.forEach(coupon => {
                    const couponDiv = document.createElement('div');
                    couponDiv.classList.add('coupon');
                    couponDiv.innerHTML = `
                        <p>Coupon Code: ${coupon.couponCode}</p>
                        <p>Discount Rate: ${coupon.discountRate}%</p>
                        <p>Minimum Purchase Amount: ${coupon.minimumPurchaseAmount}</p>
                        <p>Expiry Date: ${formatDate(coupon.expiryDate)}</p>
                    `;
                    couponsContainer.appendChild(couponDiv);
                });
            } catch (error) {
                console.error('Error fetching coupons:', error);
            }
        });
    });

    function formatDate(date) {
        return new Date(date).toLocaleDateString();
    }
</script>

<script>
  document.addEventListener("DOMContentLoaded", async function () {
    const applyCouponBtn = document.getElementById('applyCouponBtn');
    const newTotalSpan = document.getElementById('newTotal');
    const appliedCouponCodeInput = document.getElementById('appliedCouponCode');

    applyCouponBtn.addEventListener('click', async () => {
      const couponCode = document.getElementById('code').value;
      const applied = applyCouponBtn.dataset.applied === 'true';

      try {
        if (applied) {
          // Remove coupon logic
          const response = await fetch('/removeCoupon', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            }
          });
          const data = await response.json();
          if (data.success) {
            applyCouponBtn.innerText = 'Apply';
            applyCouponBtn.dataset.applied = 'false';
            newTotalSpan.innerText = data.newTotal;

            // Update the value of the hidden input field
            appliedCouponCodeInput.value = '';
          }
        } else {
          // Apply coupon logic
          const response = await fetch('/applyCoupon', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ couponCode })
          });
          const data = await response.json();
          if (data.success) {
            applyCouponBtn.innerText = 'Remove';
            applyCouponBtn.dataset.applied = 'true';
            newTotalSpan.innerText = data.newTotal;

            // Update the value of the hidden input field
            appliedCouponCodeInput.value = couponCode;
          }
          else {
            Swal.fire({
              text: 'Coupon not applicable.',
              icon: 'error',
            });
          }
        }
      } catch (error) {
        console.error('Error applying/removing coupon:', error);
        Swal.fire({
          text: 'Error applying/removing coupon. Please try again later.',
          icon: 'error',
        });
      }
    });
  });
</script>

  </div>
  <%- include('./footer') %>