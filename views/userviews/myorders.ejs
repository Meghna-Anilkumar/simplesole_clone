<%- include('./header') %>

<style>
  .css-ibwr57 {
    font-size: 14px;
    padding: 10px 16px;
    width: 35%;
    letter-spacing: 1px;
    font-weight: 700;
    border-radius: 2px;
    border-width: 0px;
    background-color: rgb(12, 8, 9);
    color: rgb(255, 255, 255);
    cursor: pointer;
  }

  .css-huh2rh {
    padding: 8px 16px;
    font-size: 12px;
    font-weight: 700;
    border-radius: 2px;
    background-color: rgb(255, 255, 255) !important;
    color: rgb(27, 8, 13);
    border-color: rgb(17, 2, 5);
    border-width: 1px;
    border-style: solid;
    cursor: pointer;
  }

  .cancelled-item,
  .returned-item {
    color: red;
    font-style: italic;
  }
</style>

<section class="h-100 gradient-custom">
  <div class="container py-5 h-100" style="margin-top: 60px;">
    <div class="row d-flex justify-content-center align-items-center h-100">
      <div class="col-lg-10 col-xl-8">
        <div class="card" style="border-radius: 10px;">
          <div class="card-body p-4">
            <div class="d-flex justify-content-between align-items-center mb-4">
              <p class="lead fw-normal mb-0" style="color: #a8729a;">Order History</p>
            </div>

            <% orders.sort((a, b) => b.orderdate - a.orderdate).forEach((order) => { %>
              <div class="card shadow-0 border mb-4">
                <div class="card-body">
                  <p class="text-muted mb-0 small">Order Date: <%= order.orderdate.toLocaleDateString() %></p>

                  <% order.items.forEach((item, index) => { %>
                    <div class="row">
                      <div class="col-md-2">
                        <img src="<%= item.product.images[0] %>" class="img-fluid" alt="Phone">
                      </div>
                      <div class="col-md-2 text-center d-flex justify-content-center align-items-center">
                        <p class="text-muted mb-0"><%= item.product.name %></p>
                      </div>
                      <div class="col-md-2 text-center d-flex justify-content-center align-items-center">
                        <p class="text-muted mb-0 small">Qty: <%= item.quantity %></p>
                      </div>
                      <div class="col-md-4 text-right">
                        <% if (order.orderStatus !== 'CANCELLED' && order.orderStatus !== 'RETURNED' && order.items.length > 1 && item.itemstatus !== 'CANCELLED' && item.itemstatus !== 'RETURNED' && order.orderStatus !== 'DELIVERED') { %>
                          <button id="cancelItemBtn_<%= order._id %>_item_<%= index %>" class="css-huh2rh"
                            onclick="openCancelItemModal('<%= order._id %>', '<%= index %>')">
                            Cancel Item
                          </button>
                        <% } else if (item.itemstatus === 'CANCELLED') { %>
                          <button class="css-huh2rh cancelled-item" disabled>Item Cancelled</button>
                        <% } else if (item.itemstatus === 'RETURNED') { %>
                          <button class="css-huh2rh returned-item" disabled>Item Returned</button>
                        <% } %>
                      </div>
                    </div>
                    <hr class="mb-4" style="background-color: #e0e0e0; opacity: 1;">
                  <% }); %>

                  <div class="row d-flex align-items-center">
                    <div class="col-md-4">
                      <p class="text-muted mb-0 small">Payment Method: <%= order.paymentMethod %></p>
                      <p class="text-muted mb-0 small <%= order.orderStatus === 'RETURNED' ? 'returned-item' : order.orderStatus === 'CANCELLED' ? 'cancelled-item' : '' %>" data-order-id="<%= order._id %>">
                        Order Status: <%= order.orderStatus %>
                      </p>
                    </div>
                    <div class="col-md-8 text-right">
                      <a href="/orderdetails/<%= order._id %>" class="btn btn-primary">View Details</a>

                      <% if (order.orderStatus === 'DELIVERED') { %>
                        <button class="css-ibwr57" data-order-id="<%= order._id %>" data-action="return"
                          onclick="openReturnOrderModal('<%= order._id %>')">Return</button>
                      <% } else if (order.orderStatus === 'CANCELLED') { %>
                        <button class="css-ibwr57 cancelled-item" disabled>Cancelled</button>
                      <% } else if (order.orderStatus === 'RETURNED') { %>
                        <button class="css-ibwr57 returned-item" disabled>Returned</button>
                      <% } else if (order.orderStatus === 'RETURN REQUESTED') { %>
                        <button class="css-ibwr57" disabled>Return Requested</button>
                      <% } else if (order.orderStatus !== 'RETURN REJECTED') { %>
                        <button id="cancelOrderBtn_<%= order._id %>" class="css-ibwr57"
                          onclick="openCancelOrderModal('<%= order._id %>')">Cancel Order</button>
                      <% } %>
                    </div>
                  </div>
                </div>
              </div>
            <% }); %>
          </div>
        </div>
      </div>
    </div>

    <!-- Cancel Order Modal -->
    <div class="modal" tabindex="-1" role="dialog" id="cancelOrderModal">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Cancellation Reason</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <form id="cancelOrderForm">
              <input type="hidden" id="cancelOrderOrderId" name="cancelOrderOrderId" value="">
              <div class="mb-3">
                <label for="cancellationReason" class="form-label">Please provide a reason for cancellation:</label>
                <textarea class="form-control" id="cancellationReason" name="cancellationReason" rows="4" required></textarea>
              </div>
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="submit" class="btn btn-danger" id="confirmCancelBtn">Confirm Cancellation</button>
            </form>
          </div>
        </div>
      </div>
    </div>

    <!-- Cancel Item Modal -->
    <div class="modal" tabindex="-1" role="dialog" id="cancelItemModal">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Cancellation Reason</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <form id="cancelItemForm">
              <input type="hidden" id="cancelItemOrderId" name="cancelItemOrderId" value="">
              <input type="hidden" id="cancelItemIndex" name="cancelItemIndex" value="">
              <div class="mb-3">
                <label for="itemCancellationReason" class="form-label">Please provide a reason for cancellation:</label>
                <textarea class="form-control" id="itemCancellationReason" name="itemCancellationReason" rows="4" required></textarea>
              </div>
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="submit" class="btn btn-danger" id="confirmCancelItemBtn">Confirm Cancellation</button>
            </form>
          </div>
        </div>
      </div>
    </div>

    <!-- Return Order Modal -->
    <div class="modal" tabindex="-1" role="dialog" id="returnOrderModal">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Return Reason</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <form id="returnOrderForm">
              <input type="hidden" id="returnOrderId" name="returnOrderId" value="">
              <div class="mb-3">
                <label for="returnReason" class="form-label">Please provide a reason for return:</label>
                <textarea class="form-control" id="returnReason" name="returnReason" rows="4" required></textarea>
              </div>
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="submit" class="btn btn-warning" id="confirmReturnBtn">Confirm Return</button>
            </form>
          </div>
        </div>
      </div>
    </div>

    <nav aria-label="Page navigation">
      <ul class="pagination justify-content-center">
        <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
          <a class="page-link" href="/orders?page=<%= currentPage - 1 %>&limit=<%= limit %>">&laquo;</a>
        </li>
        <% for (let i = 1; i <= totalPages; i++) { %>
          <li class="page-item <%= currentPage === i ? 'active' : '' %>">
            <a class="page-link" href="/orders?page=<%= i %>&limit=<%= limit %>"><%= i %></a>
          </li>
        <% } %>
        <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
          <a class="page-link" href="/orders?page=<%= currentPage + 1 %>&limit=<%= limit %>">&raquo;</a>
        </li>
      </ul>
    </nav>
  </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<script>
  function openCancelOrderModal(orderId) {
    document.getElementById('cancelOrderOrderId').value = orderId;
    var cancelOrderModal = new bootstrap.Modal(document.getElementById('cancelOrderModal'));
    cancelOrderModal.show();
  }

  document.getElementById('cancelOrderForm').addEventListener('submit', function (event) {
    event.preventDefault();
    var orderId = document.getElementById('cancelOrderOrderId').value;
    var cancellationReason = document.getElementById('cancellationReason').value;

    Swal.fire({
      title: 'Confirm Cancellation',
      text: 'Are you sure you want to cancel this order?',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#d33',
      cancelButtonColor: '#3085d6',
      confirmButtonText: 'Yes, cancel it!'
    }).then((result) => {
      if (result.isConfirmed) {
        confirmCancellation(orderId, cancellationReason);
      }
    });
  });

  function confirmCancellation(orderId, cancellationReason) {
    fetch(`/confirmCancellation/${orderId}`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ cancellationReason })
    })
      .then(response => response.json())
      .then(data => {
        if (data.message === 'Order cancelled successfully') {
          Swal.fire({
            title: 'Success!',
            text: 'Order cancelled successfully!',
            icon: 'success',
            timer: 1500,
            showConfirmButton: false
          }).then(() => {
            var cancelOrderBtn = document.getElementById(`cancelOrderBtn_${orderId}`);
            if (cancelOrderBtn) {
              cancelOrderBtn.innerText = 'Cancelled';
              cancelOrderBtn.disabled = true;
            }
            var orderStatusElement = document.querySelector(`p[data-order-id="${orderId}"]`);
            if (orderStatusElement) {
              orderStatusElement.innerText = 'Order Status: CANCELLED';
            }
            window.location.reload();
          });
        } else {
          Swal.fire({
            title: 'Error',
            text: data.message || 'Failed to cancel order.',
            icon: 'error',
            confirmButtonColor: '#3085d6'
          });
        }
      })
      .catch(error => {
        console.error('Error:', error);
        Swal.fire({
          title: 'Error',
          text: 'Failed to cancel order. Please try again.',
          icon: 'error',
          confirmButtonColor: '#3085d6'
        });
      });
  }
</script>

<script>
  function openCancelItemModal(orderId, index) {
    document.getElementById('cancelItemOrderId').value = orderId;
    document.getElementById('cancelItemIndex').value = index;
    var cancelItemModal = new bootstrap.Modal(document.getElementById('cancelItemModal'));
    cancelItemModal.show();
  }

  document.getElementById('cancelItemForm').addEventListener('submit', function (event) {
    event.preventDefault();
    var orderId = document.getElementById('cancelItemOrderId').value;
    var index = document.getElementById('cancelItemIndex').value;
    var itemCancellationReason = document.getElementById('itemCancellationReason').value;

    Swal.fire({
      title: 'Confirm Item Cancellation',
      text: 'Are you sure you want to cancel this item?',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#d33',
      cancelButtonColor: '#3085d6',
      confirmButtonText: 'Yes, cancel it!'
    }).then((result) => {
      if (result.isConfirmed) {
        confirmItemCancellation(orderId, index, itemCancellationReason);
      }
    });
  });

  function confirmItemCancellation(orderId, index, itemCancellationReason) {
    fetch(`/confirmItemCancellation/${orderId}/${index}`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ itemCancellationReason })
    })
      .then(response => response.json())
      .then(data => {
        if (data.message === 'Item cancelled successfully') {
          Swal.fire({
            title: 'Success!',
            text: 'Item cancelled successfully!',
            icon: 'success',
            timer: 1500,
            showConfirmButton: false
          }).then(() => {
            var cancelItemBtn = document.getElementById(`cancelItemBtn_${orderId}_item_${index}`);
            if (cancelItemBtn) {
              cancelItemBtn.innerText = 'Item Cancelled';
              cancelItemBtn.disabled = true;
            }
            window.location.reload();
          });
        } else {
          Swal.fire({
            title: 'Error',
            text: data.message || 'Failed to cancel item.',
            icon: 'error',
            confirmButtonColor: '#3085d6'
          });
        }
      })
      .catch(error => {
        console.error('Error:', error);
        Swal.fire({
          title: 'Error',
          text: 'Failed to cancel item. Please try again.',
          icon: 'error',
          confirmButtonColor: '#3085d6'
        });
      });
  }
</script>

<script>
  function openReturnOrderModal(orderId) {
    document.getElementById('returnOrderId').value = orderId;
    var returnOrderModal = new bootstrap.Modal(document.getElementById('returnOrderModal'));
    returnOrderModal.show();
  }

  document.getElementById('returnOrderForm').addEventListener('submit', function (event) {
    event.preventDefault();
    var orderId = document.getElementById('returnOrderId').value;
    var returnReason = document.getElementById('returnReason').value;

    Swal.fire({
      title: 'Confirm Return',
      text: 'Are you sure you want to request a return for this order?',
      icon: 'question',
      showCancelButton: true,
      confirmButtonColor: '#d33',
      cancelButtonColor: '#3085d6',
      confirmButtonText: 'Yes, request return!'
    }).then((result) => {
      if (result.isConfirmed) {
        confirmReturn(orderId, returnReason);
      }
    });
  });

  function confirmReturn(orderId, returnReason) {
    fetch(`/confirmReturn/${orderId}`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ returnReason })
    })
      .then(response => response.json())
      .then(data => {
        if (data.message === 'Return request submitted successfully') {
          Swal.fire({
            title: 'Success!',
            text: 'Return request submitted successfully!',
            icon: 'success',
            timer: 1500,
            showConfirmButton: false
          }).then(() => {
            var returnButton = document.querySelector(`button[data-order-id="${orderId}"][data-action="return"]`);
            if (returnButton) {
              returnButton.innerText = 'Return Requested';
              returnButton.disabled = true;
            }
            var orderStatusElement = document.querySelector(`p[data-order-id="${orderId}"]`);
            if (orderStatusElement) {
              orderStatusElement.innerText = 'Order Status: RETURN REQUESTED';
            }
            window.location.reload();
          });
        } else {
          Swal.fire({
            title: 'Error',
            text: data.message || 'Failed to submit return request.',
            icon: 'error',
            confirmButtonColor: '#3085d6'
          });
        }
      })
      .catch(error => {
        console.error('Error:', error);
        Swal.fire({
          title: 'Error',
          text: 'Failed to submit return request. Please try again.',
          icon: 'error',
          confirmButtonColor: '#3085d6'
        });
      });
  }
</script>