<%-include('./header')%>
<style>
    body{
    background: #ddd;
    min-height: 100vh;
    vertical-align: middle;
    display: flex;
    font-family: sans-serif;
    font-size: 0.8rem;
    font-weight: bold;
}
.title{
    margin-bottom: 5vh;
}
.card{
    margin-top: 125px;
    margin-left: 175px;
    max-width: 950px;
    width: 90%;
    box-shadow: 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    border-radius: 1rem;
    border: transparent;
}
@media(max-width:767px){
    .card{
        margin: 3vh auto;
    }
}
.cart{
    background-color: #fff;
    padding: 4vh 5vh;
    border-bottom-left-radius: 1rem;
    border-top-left-radius: 1rem;
}
@media(max-width:767px){
    .cart{
        padding: 4vh;
        border-bottom-left-radius: unset;
        border-top-right-radius: 1rem;
    }
}
.summary{
    background-color: #ddd;
    border-top-right-radius: 1rem;
    border-bottom-right-radius: 1rem;
    padding: 4vh;
    color: rgb(65, 65, 65);
}
@media(max-width:767px){
    .summary{
    border-top-right-radius: unset;
    border-bottom-left-radius: 1rem;
    }
}
.summary .col-2{
    padding: 0;
}
.summary .col-10
{
    padding: 0;
}.row{
    margin: 0;
}
.title b{
    font-size: 1.5rem;
}
.main{
    margin: 0;
    padding: 2vh 0;
    width: 100%;
}
.col-2, .col{
    padding: 0 1vh;
}
a{
    padding: 0 1vh;
}
.close{
    margin-left: auto;
    font-size: 0.7rem;
}
img{
    width: 3.5rem;
}
.back-to-shop{
    margin-top: 4.5rem;
}
h5{
    margin-top: 4vh;
}
hr{
    margin-top: 1.25rem;
}
form{
    padding: 2vh 0;
}
select{
    border: 1px solid rgba(0, 0, 0, 0.137);
    padding: 1.5vh 1vh;
    margin-bottom: 4vh;
    outline: none;
    width: 100%;
    background-color: rgb(247, 247, 247);
}
input{
    border: 1px solid rgba(0, 0, 0, 0.137);
    padding: 1vh;
    margin-bottom: 4vh;
    outline: none;
    width: 100%;
    background-color: rgb(247, 247, 247);
}
input:focus::-webkit-input-placeholder
{
      color:transparent;
}
.btn{
    background-color: #000;
    border-color: #000;
    color: white;
    width: 100%;
    font-size: 0.7rem;
    margin-top: 4vh;
    padding: 1vh;
    border-radius: 0;
}
.btn:focus{
    box-shadow: none;
    outline: none;
    box-shadow: none;
    color: white;
    -webkit-box-shadow: none;
    -webkit-user-select: none;
    transition: none; 
}
.btn:hover{
    color: white;
}
a{
    color: black; 
}
a:hover{
    color: black;
    text-decoration: none;
}
 #code{
    background-image: linear-gradient(to left, rgba(255, 255, 255, 0.253) , rgba(255, 255, 255, 0.185)), url("https://img.icons8.com/small/16/000000/long-arrow-right.png");
    background-repeat: no-repeat;
    background-position-x: 95%;
    background-position-y: center;
}
</style>
<div class="card">
    <div class="row">
        <div class="col-md-8 cart">
            <div class="title">
                <div class="row">
                    <div class="col" style="color: rgb(255, 63, 108);"><h4><b>Shopping Cart</b></h4></div>
                    <div class="col align-self-center text-right text-muted">
                        <%= cart && cart.items ? cart.items.length + ' items' : '0 items' %>
                    </div>
                </div>
            </div>  
            <% if (cart && cart.items) { %>  
                <% cart.items.forEach(item => { %>
                    <div class="row border-top border-bottom">
                        <div class="row main align-items-center">
                            <div class="col-2">
                                <a href="/products/<%= product._id %>">
                                <img class="img-fluid" src="<%= item.product.images[0] %>">
                                </a>
                            </div>
                            <div class="col">
                                <div class="row text-muted"><%= item.product.name %></div>
                                
                                <!-- <div class="row"><%= item.product.description %></div> -->
                            </div>
                            <div class="col">
                                <div>
                                    <button type="button" class="quantity-button" onclick="updateQuantity('<%= item.product._id %>', -1)">-</button>
                                    <span id="<%= item.product._id %>" class="quantity" max="<%= item.product.stock %>">
                                        <%= item.quantity %>
                                    </span>
                                    <button type="button" class="quantity-button" onclick="updateQuantity('<%= item.product._id %>', 1)">+</button>
                                </div>
                                <% if (item.quantity >= item.product.stock) { %>
                                    <div style="color:red;">(Max stock reached)</div>
                                <% } %>
                            </div>
                            
                            
                            <div class="col" id="<%= item.product._id %>">
                                <% const productOffer = productOffers.find(offer => offer.product.toString() === item.product._id.toString()); %>
                                <% if (productOffer) { %>
                                    <!-- Show the new price if a product offer is available -->
                                    &#8377;<%= productOffer.newPrice  %>
                                <% } else if (item.product.categoryofferprice && item.product.categoryofferprice < item.product.price) { %>
                                    <!-- Show the category offer price if available and less than the original price -->
                                    &#8377;<%= item.product.categoryofferprice
                                    %>
                                <% } else { %>
                                    <!-- Show the original price if no offers are available -->
                                    &#8377;<%= item.product.price %>
                                <% } %>
                                <button type="button" style="margin-left: 50px;" onclick="removeItem('<%= item.product._id %>')">X</button>
                            </div>         
                        </div>
                    </div>
                <% }); %>
            <% } else { %>
                <p style="color: blue; font-weight: bold ;" >NO ITEMS IN YOUR CART</p>
            <% } %>

            <div class="back-to-shop">
                <a href="/home">&leftarrow;</a><span class="text-muted">Back to shop</span>
            </div>
        </div>
        <div class="col-md-4 summary">
            <div><h5><b>Cart Summary</b></h5></div>
            <hr>
            <div class="row">
                <div class="col" style="padding-left:0;">PRICE(<%= cart && cart.items ? cart.items.length : 0 %> ITEMS)</div>
                <div id="totalPrice" class="col text-right">&#8377;<%= data.total %></div>
            </div>
            <form>
                
            </form>
            <div class="row" style="border-top: 1px solid rgba(0,0,0,.1); padding: 2vh 0;">
                <div class="col">TOTAL PRICE</div>
                <div class="col text-right">&#8377;<%= data.total %></div>
            </div>
            <a id="proceedToCheckoutButton" href='<%= cart && cart.items && cart.items.length > 0 ? "/proceedtocheckout" : "#" %>'>
                <button class="btn" <%= cart && cart.items && cart.items.length === 0 ? 'disabled' : '' %>>PROCEED TO CHECKOUT</button>
              </a>
        </div>
    </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<script>
   function updateQuantity(productId, change) {
    fetch(`/updateQuantity/${productId}/${change}`, { method: 'POST' })
        .then(response => {
            if (!response.ok) {
                throw new Error(response.statusText);
            }
            return response.json();
        })
        .then(data => {
            document.getElementById(productId).innerText = data.quantity;

            const currentPriceElement = document.getElementById(`price_${productId}`);
            const currentPrice = parseFloat(currentPriceElement.innerText.substring(2));
            const newPrice = (currentPrice / data.quantity).toFixed(2);
            currentPriceElement.innerText = `₹ ${newPrice}`;

            const totalPriceElement = document.getElementById('totalPrice');
            totalPriceElement.innerText = `₹ ${data.total.toFixed(2)}`;
        })
        .catch(error => {
            if (error.message === 'Quantity cannot be less than 1') {
                showAlert('Quantity cannot be less than 1');
            } else if (error.message === 'Quantity exceeds available stock') {
                showAlert('Quantity exceeds available stock');
            } else {
                console.error('Error:', error);
                showAlert('An error occurred while updating quantity');
            }
        });
        window.location.reload()
}

  function removeItem(productId) {
    Swal.fire({
      text: 'Are you sure you want to remove this item!',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Yes, remove it!',
    }).then((result) => {
      if (result.isConfirmed) {
        fetch(`/removeItem/${productId}`, { method: 'POST' })
          .then(response => {
            if (!response.ok) {
              throw new Error(`Failed to remove item ${productId}`);
            }
            return response.json();
          })
          .then(data => {
            
          })
          .catch(error => {
            console.error('Error removing item:', error);
            Swal.fire({
              icon: 'error',
              title: 'Oops...',
              text: 'Failed to remove item. Please try again.',
            });
          });

        window.location.reload()
      }
    });
  }

</script>

</div>
<%-include('./footer')%>