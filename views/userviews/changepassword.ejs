<%- include('./header') %>
<%- include('./sidebar') %>

<style>
body {
    background: rgb(186, 136, 205);
    font-family: 'Poppins', sans-serif;
    overflow-x: hidden;
}

.content-with-sidebar {
    margin-left: 280px;
    padding: 20px;
    margin-top: 120px; 
    min-height: calc(100vh - 80px);
}

.form-container {
    max-width: 500px;
    background: white;
    border-radius: 15px;
    padding: 30px;
    box-shadow: 0 4px 20px rgba(104, 39, 115, 0.1);
    margin: 0 auto;
}

.form-container h2 {
    color: #682773;
    font-weight: 600;
    margin-bottom: 20px;
}

.form-group {
    margin-bottom: 15px;
}

.form-control {
    border-radius: 8px;
    border: 1px solid #e0e0e0;
    padding: 10px;
    font-size: 14px;
}

.form-control.is-invalid {
    border-color: #dc3545;
}

.form-control.is-valid {
    border-color: #28a745;
}

.error-message {
    color: #dc3545;
    font-size: 0.875rem;
    margin-top: 0.25rem;
    display: none;
}

.submit-btn {
    background: rgb(99, 39, 120);
    border: none;
    padding: 10px 20px;
    border-radius: 8px;
    font-weight: 500;
    color: #fff;
    transition: all 0.3s ease;
}

.submit-btn:hover {
    background: #682773;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(104, 39, 115, 0.3);
}

.submit-btn:disabled {
    background: #9c6cb0;
    cursor: not-allowed;
    opacity: 1;
}


@media (max-width: 768px) {
    .content-with-sidebar {
        margin-left: 0;
        padding: 15px;
        margin-top: 20px;
    }

    .form-container {
        padding: 20px;
    }
}
</style>

<div class="content-with-sidebar">
    <div class="form-container">
        <h2>Change Password</h2>
        <form id="change-password-form" action="/changepassword" method="post">
            <div class="form-group">
                <label for="currentPassword">Current Password <span style="color: red">*</span></label>
                <input type="password" class="form-control" id="currentPassword" name="currentPassword" required>
                <div class="error-message" id="currentPasswordError"></div>
            </div>
            <div class="form-group">
                <label for="newPassword">New Password <span style="color: red">*</span></label>
                <input type="password" class="form-control" id="newPassword" name="newPassword" required>
                <div class="error-message" id="newPasswordError"></div>
            </div>
            <div class="form-group">
                <label for="confirmPassword">Confirm New Password <span style="color: red">*</span></label>
                <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
                <div class="error-message" id="confirmPasswordError"></div>
            </div>
            <button type="submit" class="btn submit-btn" id="changePasswordBtn" disabled >Save Password</button>
        </form>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
document.addEventListener('DOMContentLoaded', function () {
    const validationRules = {
        currentPassword: {
            validate: (value) => {
                if (!value.trim()) return "Current password is required";
                return "";
            },
            errorElement: "currentPasswordError"
        },
        newPassword: {
            validate: (value) => {
                if (!value.trim()) return "New password is required";
                if (value.length < 8) return "New password must be at least 8 characters";
                if (!/[A-Z]/.test(value)) return "New password must include at least one uppercase letter";
                if (!/[a-z]/.test(value)) return "New password must include at least one lowercase letter";
                if (!/[0-9]/.test(value)) return "New password must include at least one number";
                if (!/[!@#$%^&*]/.test(value)) return "New password must include at least one special character";
                return "";
            },
            errorElement: "newPasswordError"
        },
        confirmPassword: {
            validate: (value) => {
                const newPassword = document.getElementById("newPassword").value;
                if (!value.trim()) return "Confirm password is required";
                if (value !== newPassword) return "Passwords do not match";
                return "";
            },
            errorElement: "confirmPasswordError"
        }
    };

    function validateField(fieldName, value) {
        const rule = validationRules[fieldName];
        if (!rule) return true;

        const errorMsg = rule.validate(value);
        const errorElement = document.getElementById(rule.errorElement);
        const inputElement = document.getElementById(fieldName);

        if (!errorElement || !inputElement) {
            console.error(`Element not found: ${rule.errorElement} or ${fieldName}`);
            return false;
        }

        if (errorMsg) {
            errorElement.textContent = errorMsg;
            errorElement.style.display = "block";
            inputElement.classList.add("is-invalid");
            inputElement.classList.remove("is-valid");
            return false;
        } else {
            errorElement.textContent = "";
            errorElement.style.display = "none";
            inputElement.classList.remove("is-invalid");
            inputElement.classList.add("is-valid");
            return true;
        }
    }

    function checkFormValidity() {
        let allValid = true;

        for (const fieldName in validationRules) {
            const input = document.getElementById(fieldName);
            if (input && !validateField(fieldName, input.value)) {
                allValid = false;
            }
        }

        const submitBtn = document.getElementById("changePasswordBtn");
        if (submitBtn) {
            submitBtn.disabled = !allValid;
        } else {
            console.error("Submit button not found: changePasswordBtn");
        }
    }

    function setupFormValidation() {
        for (const fieldName in validationRules) {
            const input = document.getElementById(fieldName);
            if (input) {
                input.addEventListener("input", function () {
                    validateField(fieldName, this.value);
                    checkFormValidity();
                });
                input.addEventListener("blur", function () {
                    validateField(fieldName, this.value);
                    checkFormValidity();
                });
            }
        }
    }

    setupFormValidation();

    const form = document.getElementById("change-password-form");
    form.addEventListener("submit", async function (event) {
        event.preventDefault();

        checkFormValidity();
        if (document.getElementById("changePasswordBtn").disabled) {
            Swal.fire({
                icon: "warning",
                title: "Invalid Form",
                text: "Please fill all fields correctly",
            });
            return;
        }

        const currentPassword = document.getElementById("currentPassword").value;
        const newPassword = document.getElementById("newPassword").value;
        const confirmPassword = document.getElementById("confirmPassword").value;

        try {
            const response = await fetch("/changepassword", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ currentPassword, newPassword, confirmPassword })
            });

            const data = await response.json();

            if (!response.ok) {
                Swal.fire({
                    icon: "error",
                    title: "Error!",
                    text: data.error || "Failed to change password",
                });
            } else {
                Swal.fire({
                    icon: "success",
                    title: "Password Changed Successfully",
                    showConfirmButton: false,
                    timer: 1500,
                    position: "top-end",
                    toast: true
                });
                form.reset();
                document.querySelectorAll(".form-control").forEach((el) => {
                    el.classList.remove("is-valid", "is-invalid");
                });
                document.querySelectorAll(".error-message").forEach((el) => {
                    el.textContent = "";
                    el.style.display = "none";
                });
                document.getElementById("changePasswordBtn").disabled = true;
            }
        } catch (error) {
            console.error("Error:", error);
            Swal.fire({
                icon: "error",
                title: "Error!",
                text: "An error occurred. Please try again later.",
            });
        }
    });
});
</script>

<%- include('./footer') %>